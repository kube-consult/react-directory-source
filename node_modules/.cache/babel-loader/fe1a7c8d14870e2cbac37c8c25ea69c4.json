{"ast":null,"code":"var _jsxFileName = \"/Users/fostpau/bootcamp/GIT/react-directory/src/App.js\";\nimport React from 'react';\nimport FriendCard from './components/FriendCard';\nimport Head from './components/Head';\nimport Wrapper from './components/Wrapper';\nimport Title from './components/Title';\nimport friends from './friends.json';\n\nfunction App() {\n  let [friendsList, setFriends] = React.useState(friends);\n\n  const handleFilterButton = (event, type) => {\n    console.log(\"hello handleFileterButton\", event);\n    let List = filter_by_key(friendsList, event, type);\n    console.log(List);\n    friendsList = List;\n    setFriends(List);\n  };\n\n  const handleSortButton = event => {\n    console.log(\"hellohandleSortButton \", event);\n    let List = sort_by_key(friendsList, event);\n    console.log(\"tf\", List);\n    friendsList = List;\n    setFriends([...friendsList]);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Staff Inventory\"), /*#__PURE__*/React.createElement(Head, {\n    onClick2: handleSortButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), friendsList.map(friend => {\n    console.log(friend, \"pf\");\n    return /*#__PURE__*/React.createElement(FriendCard, {\n      key: friend.id,\n      name: friend.name,\n      team: friend.team,\n      occupation: friend.occupation,\n      location: friend.location,\n      id: friend.id,\n      onClick: handleFilterButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    });\n  }));\n}\n\nfunction sort_by_key(array, key) {\n  return array.sort(function (a, b) {\n    var x = a[key];\n    var y = b[key];\n\n    if (typeof x == \"string\") {\n      x = (\"\" + x).toLowerCase();\n    }\n\n    if (typeof y == \"string\") {\n      y = (\"\" + y).toLowerCase();\n    }\n\n    return x < y ? -1 : x > y ? 1 : 0;\n  });\n}\n\nfunction filter_by_key(array, key, type) {\n  const newList = [];\n\n  for (const friend of array) {\n    if (type == 1) {\n      if (friend.name === key) {\n        newList.push(friend);\n      }\n    } else if (type == 2) {\n      if (friend.occupation === key) {\n        newList.push(friend);\n      }\n    } else if (type == 3) {\n      if (friend.team === key) {\n        newList.push(friend);\n      }\n    } else if (type == 4) {\n      if (friend.location === key) {\n        newList.push(friend);\n      }\n    }\n  }\n\n  return newList;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fostpau/bootcamp/GIT/react-directory/src/App.js"],"names":["React","FriendCard","Head","Wrapper","Title","friends","App","friendsList","setFriends","useState","handleFilterButton","event","type","console","log","List","filter_by_key","handleSortButton","sort_by_key","map","friend","id","name","team","occupation","location","array","key","sort","a","b","x","y","toLowerCase","newList","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FriendCard from './components/FriendCard';\nimport Head from './components/Head';\nimport Wrapper from './components/Wrapper';\nimport Title from './components/Title';\nimport friends from './friends.json';\n\nfunction App() {\n  let [friendsList, setFriends] = React.useState(friends);\n\n  const handleFilterButton = (event, type) => {\n    console.log(\"hello handleFileterButton\", event)\n    let List = filter_by_key(friendsList, event, type);\n    console.log(List);\n    friendsList = List;\n    setFriends(List);\n\n  };\n\n  const handleSortButton = (event) => {\n    console.log(\"hellohandleSortButton \", event)\n    let List = sort_by_key(friendsList, event);\n    console.log(\"tf\", List);\n    friendsList = List;\n    setFriends([...friendsList]);\n  };\n\n  return (\n    <Wrapper>\n      <Title>Staff Inventory</Title>\n      {\n        <Head\n          onClick2={handleSortButton}\n        />\n      }\n      {\n\n        friendsList.map((friend) => {\n          console.log(friend, \"pf\");\n          return (\n            <FriendCard\n              key={friend.id}\n              name={friend.name}\n              team={friend.team}\n              occupation={friend.occupation}\n              location={friend.location}\n              id={friend.id}\n              onClick={handleFilterButton}\n            />\n          )\n        })\n      }\n    </Wrapper>\n  );\n}\n\nfunction sort_by_key(array, key) {\n  return array.sort(function (a, b) {\n    var x = a[key];\n    var y = b[key];\n\n    if (typeof x == \"string\") {\n      x = (\"\" + x).toLowerCase();\n    }\n    if (typeof y == \"string\") {\n      y = (\"\" + y).toLowerCase();\n    }\n    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n  });\n}\n\nfunction filter_by_key(array, key, type) {\n  const newList = [];\n  for (const friend of array) {\n    if (type == 1) {\n      if (friend.name === key) {\n        newList.push(friend);\n      }\n    } else if (type == 2) {\n      if (friend.occupation === key) {\n        newList.push(friend);\n      }\n    } else if (type == 3) {\n      if (friend.team === key) {\n        newList.push(friend);\n      }\n    } else if (type == 4) {\n      if (friend.location === key) {\n        newList.push(friend);\n      }\n    }\n  }\n  return newList;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}